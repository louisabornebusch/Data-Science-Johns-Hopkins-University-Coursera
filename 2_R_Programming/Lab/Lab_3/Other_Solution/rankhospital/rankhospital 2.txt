
rankhospital <- function(state, outcome, num) {
    ## Read outcome data
    ## Check that state and outcome are valid
    ## For each state, find the hospital of the given rank
    ## Return a data frame with the hospital names and the
    ## (abbreviated) state name
    outcomedata <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings="Not Available")
    outcomeDataSet <- outcomedata[which(outcomedata$State==state),]
    is_a_state <- is.element(state,outcomedata[,"State"])
    if(!(is_a_state)){
        stop ("invalid state")
    }else{
        if (outcome=="heart attack") {
            a <- outcomeDataSet[[11]]
        }   
        else if (outcome=="heart failure") {
            a <- outcomeDataSet[[17]]
        } 
        else if (outcome=="pneumonia") {
            a <- outcomeDataSet[[23]]
        } 
         
        else{
            stop ("invalid outcome")
        }        
    }
    outcomeFilesName<- as.character(outcomeDataSet[ , 2])
    b <- as.numeric(a)
    outcomeFilesOrdered<- order(b, decreasing = F)
    if (num == "best") {outcomeFilesOrdered<- order(b, decreasing = F)
                        g<-data.frame(outcomeFilesName[outcomeFilesOrdered],stringsAsFactors = F)
                        t<- as.character(g[1,1])
                        t}
    if (num == "worst") {outcomeFilesOrdered<- order(b, decreasing = T)                       
                         g<-data.frame(outcomeFilesName[outcomeFilesOrdered],stringsAsFactors = F)
                         t<- as.character(g[1,1])
                         t}
    else {
        pos <- match((sort(b)[num]),a)
        hospitalName <- outcomeDataSet[[2]][pos]
        hospitalName
    }   
   
}

#rankhospital("TX", "heart failure", 4)
#rankhospital("MD", "heart attack", "worst")
#rankhospital("MN", "heart attack", 5000)
#rankhospital("NC", "heart attack", "worst")

